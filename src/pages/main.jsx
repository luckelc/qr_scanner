'use client';
import React, {useState} from 'react';
import Head from 'next/head'
import Image from 'next/image'
import questions from "@/questions.json";
import styles from '@/styles/index.module.css'
import QuestionRow from '@/components/QuestionRow';

export default function QrScannerHomePage() {
  const [showModule, setShowModule] = useState(false);
  const [questionInfo, setQuestionInfo] = useState('Test text');

  const goBack = (event) => {
    setShowModule(false);
  };

  function moduleCode(questionName, questionImageUrl, questionDesc) {
    let hasImages = false;
    if(questionImageUrl != "" && questionImageUrl != null){
      hasImages = true
    }
    return (
      <div className={styles.module}>
        <div>
          <div className={styles.go_back} onClick={goBack}></div>
          <div className={styles.info}>
            <h2>{questionName}</h2>
            <p>{questionDesc}</p>
            {hasImages? (<img src={questionImageUrl} alt={'Image of ' + questionName}/>) : ""}
          </div>
        </div>
      </div>
    );
  } 

  function getQuestionHandler(questionIndex) { 
    const result = questions.questions[questionIndex];
    console.log(result)
    return result
  }

  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {showModule? (questionInfo) : ''}
        <h1 className={styles.h1}>QR Scanning Code</h1>
          <QuestionRow question={getQuestionHandler(0)} />
          <QuestionRow question={getQuestionHandler(1)} />
          <QuestionRow question={getQuestionHandler(2)} />

        <div className={styles.nav}>
          <div className={styles.navGroup}>
            <div className={styles.scan}>SCAN</div>
            <div className={styles.give_up}>GIVE UP</div>
          </div>
        </div>
      </main>
    </>
  )
}
